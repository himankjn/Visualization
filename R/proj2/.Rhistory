}
Eratosthenes(10)
Eratosthenes<-function(n){
for(j in 2:n)
{
flag=1
for(k in 3:(j/2)){
if(j%%k==0){flag=0
break
}
}
if(flag==1){print(j)}
}
}
Eratosthenes(10)
Eratosthenes<-function(n){
for(j in 2:n)
{
flag=1
for(k in 1:(j/2)){
if(j%%k==0){flag=0
break
}
}
if(flag==1){print(j)}
}
}
Eratosthenes(10)
Eratosthenes<-function(n){
for(j in 2:n)
{
flag=1
for(k in 2:(j/2)){
if(j%%k==0){flag=0
break
}
}
if(flag==1){print(j)}
}
}
Eratosthenes(10)
for(j in 2:n)
{
flag=1
for(k in 2:(j/2)){
if(j%%k==0){flag=0
break
}
}
if(flag==1){print(j)}
}
for(j in 2:10)
{
flag=1
for(k in 2:(j/2)){
if(j%%k==0){flag=0
break
}
}
if(flag==1){print(j)}
}
y<-c(2,5,3,8,7)
x<-1:5
corr(x,y)
cor(x,y)
y<-c(145,140,130,124,133,127,120,110,116)
x<-c(80,82,86,91,83,85,89,96,93)
sum(x)
sum(y)
x*y
sum(x*y)
x^2
sum(x^2)
y^2
sum(y^2)
mean(x)
mean(y)
cor(x,y)
sum(x*y)
sum(x*x)
sum(y*y)
785/9
sqrt((68701/9)-(87.22^2))
sqrt((146675/9)-(127.22^2))
cor(x,y)
y<-c(8,6,10,8,12,16,16,10,32,32)
x<-c(1,3,4,2,5,8,9,10,13,15)
sum(x)
sum(y)
x*y
sum(x*y)
sum(x*x)
(x*x)
sum(x*x)
(y*y)
xum(y*y)
sum(y*y)
mean(y)
mean(x)
cor(x,y)
cor(y,)
cor(y,x)
set.seed(12345)
dataMatrix<-matrix(rnorm(400),nrow=40)
image(1:10,1:40,t(dataMatrix)[,nrow(dataMatrix):1])
par(mfrow=c(2,1),mar=rep(0.2,4))
image(1:10,1:40,t(dataMatrix)[,nrow(dataMatrix):1])
par(mfrow=c(1,2),,mar=rep(0.2,4))
par(mfrow=c(1,2),mar=rep(0.2,4))
image(1:10,1:40,t(dataMatrix)[,nrow(dataMatrix):1])
image(dataMatrix)
image(rot(dataMatrix))
image((dataMatrix)[,nrow(dataMatrix):1])
image(dataMatrix)
image(t(dataMatrix))
image(1:10,1:40,t(dataMatrix)[,nrow(dataMatrix):1])
image(t(dataMatrix))
heatmap(dataMatrix)
image(1:10,1:40,t(dataMatrix)[,nrow(dataMatrix):1])
heatmap(dataMatrix)
kmeansob<-kmeans(dataMatrix)
kmeansob<-kmeans(dataMatrix,centers=3)
head(dataMatrix)
heatmap(dataMatrix)
library(swirl)
?heatmap
heatmap(dataMatrix,Rowv=NA,Colv=NA)
library(swirl)
swirl()
9
bye()
swirl()
bye()
swirl()
dist(dataFrame)
hc<-hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h=1.5,col="blue")
abline(h=0.4,"red")
abline(h=0.4,col="red")
5
abline(h=0.05,col="green")
12
abline(h=0.05,col="green")
dist(dFsm)
hc
heatmap(dataMatrix,col=cm.colors(25))
heatmap(ht)
heatmap(mt)
mt
plot(denmt)
distmt
cmat
points(cx,cy,col=c("red","orange",'purple'),pch=3,cex=2,lwd=2)
mdist(x,y,cx,cy)
swirl()
swirl()
swirl()
swirl()
skip()
skip()
skip()
apply(distTmp,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust])
tapply(x,newClust,mean)
tapply(y,newClust,mean)
points(newCX,newCy,col=cols1,pch=8,cex=2,lwd=2)
points(newCx,newCy,col=cols1,pch=8,cex=2,lwd=2)
skip(0)
skip()
skip()
skip()
skip()
skip()
skip()
kmeans(dataFrame,centers=3)
kmobj$iter
kmObj$iter
plot(x,y,col=kmObj$cluster,pch=19,cex=2)
points(kmObj$centers,col=c("black","red","green"),pch=3,cex=3,lwd=3)
plot(x,y,col=kmeans(dataFrame,6)$clusters,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
head(dataMatrix)
heatmap(dataMatrix)
swirl()
library(swirl)
swirl()
myedit("addPatt.R")
source("addPatt.R",local=TRUE)
heatmap(dataMatrix)
mat
svd(mat)
diag
matu %*%diag%*% t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2$v[,1:2]
svd2$d
dim(faceData)
skip()
myImage(a1)
skip()
skip()
skip()
skip()
library()
library(swirl)
swirl()
myplclust(hclustering,lab.col=unclass(sub1$activity))
svd1<=svd(scale(sub1[,-c(562,563)]))
svd1<-svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon<-which.max(svd1$v)
maxCon<-which.max(svd1$v[,2])
mdist<-dist(sub1[10:12,maxCon])
mdist<-dist(sub1[10:12,maxCon)])
mdist<-dist(sub1[10:12,maxCon)]
mdist<-dist(sub1[c(10:12,maxCon)])
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering<-hclust(mdist)
myplclust(hclustering,lab.col=unclass(sub1$activity))
names(sub1[maxCon])
kClust<-kmeans(sub1[-c(562,563)],centers=6)
kClust<-kmeans(sub1[,-c(562,563)],centers=6)
table(kClust$cluster,sub1$activity)
kClust<-kmeans(sub1[,-c(562,563)],centers=6,nstart=100)
table(kClust$cluster,sub1$activity)
dim(kClust$centers)
laying<-which(kClust$size==28)
laying<-which(kClust$size==29)
plot(kClsut$centers[laying,1:12],pch=19,ylab="Laying Cluster")
plot(kClust$centers[laying,1:12],pch=19,ylab="Laying Cluster")
names(sub[,1:3])
names(sub1[,1:3])
walkdown<-which(kClust$size==49)
skip()
dim(pm0)
head(pm0)
cnames
strsplit(cnames,'|')
strsplit(cnames,'|',fixed=TRUE)
cnames<-strsplit(cnames,'|',fixed=TRUE)
cnames
names(pm0)<-make.names(cnames[[1]][wcol])
pm0
head(pm0)
x0<-pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1)<-make.names(cnames[[1]][wcol])
skip()
skip()
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0),log10(x1))
negative<-x1<0
sum(negative,na.rm=TRUE
)
mean(negative,na.rm=TRUE
)
dates<-pm1$Date
str(dates)
as.Date(as.character(dates),"%Y%m%d"0)
as.Date(as.character(dates),"%Y%m%d")
dates<-as.Date(as.character(dates),"%Y%m%d")
head(dates)
histograms(dates[negative],"month")
?hist
hist(dates[negative],"month")
str(site0)
intersect(site0,site1)
skip()
both
head(pm0)
cnt<-subset(pm0,State.Code=36,pm1$county.site=county.site)
?subset
cnt<-subset(pm0,State.Code=36,state.county)
cnt<-subset(pm0,State.Code=36,state.count)
cnt0<-subset(pm0,State.Code=36,county.site)
cnt0<-subset(pm0,State.Code==36,county.site)
cnt0<-subset(pm0,State.Code==36&county.site %in% both)
cnt1<-subset(pm1,State.Code==36&county.site %in% both)
sapply(split(cnt0,cnt0$county.site),nrow)
skip()
pm0sub<-subset(cnt0,County.code=63&Site.ID==2008)
pm0sub<-subset(cnt0,County.Code=63&Site.ID==2008)
pm0sub<-subset(cnt0,County.Code==63&Site.ID==2008)
skip()
x0sub<-pm0sub$Sample.Value
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
range(1,10)
range(c(1,2,3),c(3,4,5))
skip()
str(mn0)
skip()
?tapply
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
curve(x*sin(x), from = 0, to = 1, n = 1001)
curve(x*sin(x), from = 0, to = 0.1, n = 1001)
df<-data.frame(c(3,4,2,5,12,4),c('a','b','c','a','b','c'))
df
df<-data.frame(num=c(3,4,2,5,12,4),f=c('a','b','c','a','b','c'))
df
tapply(df$num,f,mean)
tapply(df$num,df$f,mean)
?tapply
library(R.utils)
install.packages("R.utils")
library(R.utils)
intToBin(23)
intToBin(2)
intToBin(-2)
intToBin(-32)
intToBin(-31)
intToBin(-1)
intToBin(-2)
typeof(intToBin(-2))
round(5.324,digits = 2)
a3 = intToBin((round(6/7, digits = 2)*10ˆ2)); paste0(0,“.”,a3)
a3 = intToBin((round(6/7, digits = 2)*10ˆ2));
a3 = intToBin((round(6/7, digits = 2)*10^2));
paste0(0,“.”,a3)
a3
6/7
intToBin(86)
paste0(0,“.”,a3)
a3 = intToBin((round(6/7, digits = 2)*10^2));
paste0(0,“.”,a3)
paste0(0,“.”,a3)
paste0(0,".",a3)
paste(0,".",a3)
paste0(0,".",a3)
12/5
12/5*100
?subset.default
?scan
df
df<-data.frame(c(1:5))
df
df<-data.frame((1:5))
df
a<-1:9
df<-data.frame((1:5), ("Atishay":a))
df
?data.frame
df<-data.frame((1:5), c("Atishay":a))
df<-data.frame(x=1:5, y=c("Atishay":"bb"))
df
df<-data.frame(x=1:5, y=c("Atishay","bb"))
df<-data.frame(x=1:5, y=c("Atishay","bb","b","a","df"))
df
b<-'ati'
a<-1:9
b:a
paste(b,a)
##6)
more.colors<-c("r","y",'b','y','b','g','b','g','m','g','m','c')
unique<-unique(more.colors)
unique
unique[rep(1:3,4)+rep(0:3,each=3)]
rep(1:3,4)+rep(0:3,each=3)
x<-c(1,3,4,5,7,8,10)
x<-c(1,3,4,5,7,8,10)
x<-c(1,3,4,5,7,8,10)
x<-c(1,3,4,5,7,8,10)
y<-2*x
1/7
x*y
sum(x*y)
sum(x*y)-(mean(x)-mean(y))
sum(x*y)-(mean(x)*mean(y))
sx<-sqrt((sum(x^2)/n)-mean(x)^2)
sx<-sqrt((sum(x^2)/7)-mean(x)^2)
sy<-sqrt((sum(y^2)/7)-mean(y)^2)
(sum(x*y)-(mean(x)*mean(y)))/(7*sx*sy)
((sum(x*y)/7)-(mean(x)*mean(y)))/(sx*sy)
z=x-y
sz<-sqrt((sum(z^2)/7)-mean(z)^2)
(sx^2+sy^2-sz^2)/(z*sx*sy)
sz<-sqrt((sum(z^2)/7)-mean(z)^2)
sz
(sx^2+sy^2-sz^2)/(7*sx*sy)
(sx^2+sy^2-sz^2)/(mean(z)*sx*sy)
(sx^2+sy^2-sz^2)/(7*sx*sy)
(sx^2+sy^2-sz^2)/(sx*sy)
(sx^2+sy^2-sz^2)/(2sx*sy)
(sx^2+sy^2-sz^2)/(2*sx*sy)
?subset
?format
?formatC
readline(prompt = "enter")
?readline
?scan
library(sloop)
sloop::otype()
otype(1:10)
otype(mtcars)
mtcars
mle_obj<-stats4::mle(function(x=1)(x-2)^2)
otype(mle_obj)
is.object(1:10)
is.object(mtcars)
typeof(mtcars)
class(1:10)
#reading the Two data files
scc<-readRDS("Source_Classification_Code.rds")
nei<-readRDS("summarySCC_PM25.rds")
##subsetting baltimore & on road data from nei
baltimore<-subset(nei,subset=nei$fips=="24510"&nei$type=="ON-ROAD")
#aggregating in sum for motor emissions
motorBalt<-aggregate(Emissions~year,baltimore,sum)
#plotting emissions over the years for baltimore vehicle pollution in png
ggplot(motorBalt,aes(year,Emissions,col="pink"))+geom_point()+geom_line()+ggtitle("Baltimore Motor Emissions")
library(ggplot2)
library(ggplot2)
library(ggplot2)
#reading the Two data files
scc<-readRDS("Source_Classification_Code.rds")
nei<-readRDS("summarySCC_PM25.rds")
##subsetting baltimore & on road data from nei
baltimore<-subset(nei,subset=nei$fips=="24510"&nei$type=="ON-ROAD")
#aggregating in sum for motor emissions
motorBalt<-aggregate(Emissions~year,baltimore,sum)
#plotting emissions over the years for baltimore vehicle pollution in png
ggplot(motorBalt,aes(year,Emissions,col="pink"))+geom_point()+geom_line()+ggtitle("Baltimore Motor Emissions")
library(ggplot2)
#reading the Two data files
scc<-readRDS("Source_Classification_Code.rds")
nei<-readRDS("summarySCC_PM25.rds")
##subsetting baltimore & on road data from nei
baltimore<-subset(nei,subset=nei$fips=="24510"&nei$type=="ON-ROAD")
#aggregating in sum for motor emissions
motorBalt<-aggregate(Emissions~year,baltimore,sum)
#plotting emissions over the years for baltimore vehicle pollution in png
ggplot(motorBalt,aes(year,Emissions,col="pink"))+geom_point()+geom_line()+ggtitle("Baltimore Motor Emissions")
library(ggplot2)
#reading the Two data files
scc<-readRDS("Source_Classification_Code.rds")
nei<-readRDS("summarySCC_PM25.rds")
##subsetting baltimore & on road data from nei
baltimore<-subset(nei,subset=nei$fips=="24510"&nei$type=="ON-ROAD")
#aggregating in sum for motor emissions
motorBalt<-aggregate(Emissions~year,baltimore,sum)
#plotting emissions over the years for baltimore vehicle pollution in png
ggplot(motorBalt,aes(year,Emissions,col="pink"))+geom_point()+geom_line()+ggtitle("Baltimore Motor Emissions")
setwd("proj2")
library(ggplot2)
#reading the Two data files
scc<-readRDS("Source_Classification_Code.rds")
nei<-readRDS("summarySCC_PM25.rds")
##subsetting baltimore & on road data from nei
baltimore<-subset(nei,subset=nei$fips=="24510"&nei$type=="ON-ROAD")
#aggregating in sum for motor emissions
motorBalt<-aggregate(Emissions~year,baltimore,sum)
#plotting emissions over the years for baltimore vehicle pollution in png
ggplot(motorBalt,aes(year,Emissions,col="pink"))+geom_point()+geom_line()+ggtitle("Baltimore Motor Emissions")
ggplot(motorBalt,aes(year,Emissions))+geom_point()+geom_line()+
ggtitle("Baltimore Motor Emissions")
ggplot(motorBalt,aes(year,Emissions))+geom_point(col=pink)+geom_line()+
ggtitle("Baltimore Motor Emissions")
ggplot(motorBalt,aes(year,Emissions))+geom_point(col="pink")+geom_line()+
ggtitle("Baltimore Motor Emissions")
ggplot(motorBalt,aes(year,Emissions))+geom_point(col="pink")+geom_line("pink")+
ggtitle("Baltimore Motor Emissions")
ggplot(motorBalt,aes(year,Emissions))+geom_point(col="pink")+geom_line(col="pink")+
ggtitle("Baltimore Motor Emissions")
ggplot(motorBalt,aes(year,Emissions))+geom_point(col="pink")+geom_line(col="green")+
ggtitle("Baltimore Motor Emissions")
ggplot(motorBalt,aes(year,Emissions))+geom_point(col="pink")+geom_line(col="purple")+
ggtitle("Baltimore Motor Emissions")
ggplot(motorBalt,aes(year,Emissions))+geom_point(col="purple")+geom_line(col="purple")+
ggtitle("Baltimore Motor Emissions")
#reading the Two data files
scc<-readRDS("Source_Classification_Code.rds")
nei<-readRDS("summarySCC_PM25.rds")
##subsetting baltimore & on road data from nei
baltimore<-subset(nei,subset=nei$fips=="24510"&nei$type=="ON-ROAD")
#aggregating in sum for motor emissions
motorBalt<-aggregate(Emissions~year,baltimore,sum)
#plotting emissions over the years for baltimore vehicle pollution in png
png("plot5.png")
ggplot(motorBalt,aes(year,Emissions))+geom_point(col='purple')+geom_line(col='purple')+ggtitle("Baltimore Motor Emissions")
dev.off()
